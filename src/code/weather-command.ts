import { Telegram } from "telegraf"
import { geocodeAPI } from "./geocode-api"
import { settings } from "./settings"
import { weatherAPI } from "./weather-api"

class WeatherCommand {
  public answer = async (chatId: number, methods: Telegram): Promise<void> => {
    const weatherText = await this.getWeatherText(chatId)

    await methods.sendMessage(chatId, weatherText).catch(() => {})
  }

  private getWeatherText = async (chatId: number): Promise<string> => {
    let weatherText = ""
    const currentChatSettings = settings.getChatSettings(chatId)

    if (!currentChatSettings) return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. üòü\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    const cityName = currentChatSettings.city
    const cityGeocode = await geocodeAPI.getCityGeocode(cityName)

    const { name, latitude, longitude } = cityGeocode
    const weatherData = await weatherAPI.getCurrentWeather(latitude, longitude)

    if (weatherData.weathername !== "") {
      weatherText = `–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –≤ –≥–æ—Ä–æ–¥–µ "${name}":\n` +
        `üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${weatherData.temperature}¬∞C\n` +
        `üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${weatherData.windspeed} –∫–º/—á\n` +
        `‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: ${weatherData.weathername}\n` +
        `üìÑ –ö–æ–¥ –ø–æ–≥–æ–¥—ã: ${weatherData.weathercode}`
    } else {
      weatherText = `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üò¨\n` + 
        `–ì–æ—Ä–æ–¥ "${cityName}" –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω.`
    }

    return weatherText
  }
}

export const weatherCommand = new WeatherCommand()